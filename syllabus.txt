12 hours to complete

1.	Introduction to Database DevOps  
	-	Intro 
		-	Course overview
		-	Structure and format.
	- What is DevOps?
		-	Basic description
		-	refer to other resources and courses from MS
	-	Challenges for database automation 
		- 	Code Structure
		-	Integrity and security of Production data 
		-	Production data vs reference data 
		-	Test data (in dev and other pre-Production environments) 
		-	The DBA (unfamiliar with tools, change) 
		-	Environment differences 
		-	Dependencies (within database and across databases) 
		-	Multiple applications accessing the same db 
		-	Database drift (aka – Hot fixes directly to Prod) 
		-	Maintaining backwards compatibility 
		-	Recovering from releases (rollback vs roll forward) 
	-	Options for Database Development
		-	ORM 
		-	State-based 
		-	Migrations-based 
	-	State vs Migrations Pros and Cons - Hybrid Solution 
		-	What is state based development approach?
		- 	What is a migrations based development approach
		- 	Comparison of the two approaches
	-	Better collaboration between developers and DBAs
		- 	Challenges in many organizations
		- 	Advantages of a common approach
		-	Disadvantages of collaboration
	- 	DEMO - Overall process in place. Make change to table, add data, deploy to multiple environments.
 
2.	Including your database in development practices
	-	The challenges of putting database code in a VCS
		- lack of tooling
		- code is stored in the database
	-	Source controlling your database 
		-	Migration scripts 
			- DEMO
		-	Schema 
			- Demo - SOC
		-	Lookup or Reference data 
	-	Including your database in Continuous Integration  
		- the build process
		- packaging changes for upgrades
		- DEMO - CI process in Azure (VSTS)
	-	Continuous unit testing for databases (high level – this could be a class in itself, which we could produce) 
		- overview of testing database code
		- frameworks available
		- test data generation
		- DEMO - write two tests


3.	Release Management and the database 
	-	Releasing your database in non-Production and Production environments
		- 	Deploying Intermediate Environments for testing
			- DEMO release process in VSTS
		-	Staging environments
			- Add a step to restore or copy a prod db
			- DEMO - Add a step
		-	Manual review steps for Production (comparison report, preview script, review warnings) 
			- DEMO - Add a step for an approver
	-	Validating deployments 
		- Post deploy
	-	Dealing with database drift 
	-	Additional database testing 
		-	Integration testing 
		- 	Smoke testing
	-	Recovering when things go wrong 
		-	Importance of backups 
		-	Rolling forward 
 
Monitoring databases after releasing 
	-	Understanding how releases impact database servers and performance 
	-	Dealing with database drift 

	 
5.	Advanced topics 
	-	Branching and merging database changes 
		- develop using branches
		- merges for db code
		- Git and pull requests
		- DEMO - develop in a branch, issue PR, merge, resolve conflicts.
	- 	Monitoring the database after release
		- tracking deployments in your monitoring tool
		- adding custom instrumentation
	-	Provisioning dev and test environments
		- Quick refreshes of environments needed, esp for CI.
	-	Dealing with differences across environments or customer sites 
		-	User permissions and roles 
		-	Customize releases per customer site (SQLCMD variables) 
		